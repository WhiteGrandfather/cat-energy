{"version":3,"file":"svg4everybody-min.js","sources":["svg4everybody.js"],"sourcesContent":["/*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n\nfunction embed(parent, svg, target, use) {\n  // if the target exists\n  if (target) {\n    // create a document fragment to hold the contents of the target\n    var fragment = document.createDocumentFragment();\n\n    // cache the closest matching viewBox\n    var viewBox = !svg.hasAttribute('viewBox') && target.getAttribute('viewBox');\n\n    // conditionally set the viewBox on the svg\n    if (viewBox) {\n      svg.setAttribute('viewBox', viewBox);\n    }\n\n    // clone the target\n    var clone = document.importNode ? document.importNode(target, true) : target.cloneNode(true);\n\n    var g = document.createElementNS(svg.namespaceURI || 'http://www.w3.org/2000/svg', 'g');\n\n    // copy the contents of the clone into the fragment\n    while (clone.childNodes.length) {\n      g.appendChild(clone.firstChild);\n    }\n\n    if (use) {\n      for (var i = 0; use.attributes.length > i; i++) {\n        var attr = use.attributes[i];\n        if (attr.name === 'xlink:href' || attr.name === 'href') {\n          continue;\n        }\n        g.setAttribute(attr.name, attr.value);\n      }\n    }\n\n    fragment.appendChild(g);\n\n    // append the fragment into the svg\n    parent.appendChild(fragment);\n  }\n}\n\nfunction loadreadystatechange(xhr, use) {\n  // listen to changes in the request\n  xhr.onreadystatechange = function () {\n    // if the request is ready\n    if (xhr.readyState === 4) {\n      // get the cached html document\n      var cachedDocument = xhr._cachedDocument;\n\n      // ensure the cached html document based on the xhr response\n      if (!cachedDocument) {\n        cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument('');\n\n        cachedDocument.body.innerHTML = xhr.responseText;\n\n        // ensure domains are the same, otherwise we'll have issues appending the\n        // element in IE 11\n        if (cachedDocument.domain !== document.domain) {\n          cachedDocument.domain = document.domain;\n        }\n\n        xhr._cachedTarget = {};\n      }\n\n      // clear the xhr embeds list and embed each item\n      xhr._embeds.splice(0).map(function (item) {\n        // get the cached target\n        var target = xhr._cachedTarget[item.id];\n\n        // ensure the cached target\n        if (!target) {\n          target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id);\n        }\n\n        // embed the target into the svg\n        embed(item.parent, item.svg, target, use);\n      });\n    }\n  };\n\n  // test the ready state change immediately\n  xhr.onreadystatechange();\n}\n\nfunction svg4everybody(rawopts) {\n  var opts = Object(rawopts);\n\n  // create legacy support variables\n  var nosvg;\n  var fallback;\n\n  // if running with legacy support\n  if (LEGACY_SUPPORT) {\n    // configure the fallback method\n    fallback = opts.fallback || function (src) {\n      return src.replace(/\\?[^#]+/, '').replace('#', '.').replace(/^\\./, '') + '.png' + (/\\?[^#]+/.exec(src) || [''])[0];\n    };\n\n    // set whether to shiv <svg> and <use> elements and use image fallbacks\n    nosvg = 'nosvg' in opts ? opts.nosvg : /\\bMSIE [1-8]\\b/.test(navigator.userAgent);\n\n    // conditionally shiv <svg> and <use>\n    if (nosvg) {\n      document.createElement('svg');\n      document.createElement('use');\n    }\n  }\n\n  // set whether the polyfill will be activated or not\n  var polyfill;\n  var olderIEUA = /\\bMSIE [1-8]\\.0\\b/;\n  var newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/;\n  var webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/;\n  var olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/;\n  var edgeUA = /\\bEdge\\/.(\\d+)\\b/;\n  //Checks whether iframed\n  var inIframe = window.top !== window.self;\n\n  if ('polyfill' in opts) {\n    polyfill = opts.polyfill;\n  } else if (LEGACY_SUPPORT) {\n    polyfill = olderIEUA.test(navigator.userAgent) || newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n  } else {\n    polyfill = newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n  }\n\n  // create xhr requests object\n  var requests = {};\n\n  // use request animation frame or a timeout to search the dom for svgs\n  var requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n  // get a live collection of use elements on the page\n  var uses = document.getElementsByTagName('use');\n  var numberOfSvgUseElementsToBypass = 0;\n\n  function oninterval() {\n    // if all <use>s in the array are being bypassed, don't proceed.\n    if (numberOfSvgUseElementsToBypass && uses.length - numberOfSvgUseElementsToBypass <= 0) {\n      return void requestAnimationFrame(oninterval, 67);\n    }\n\n    // if there are <use>s to process, proceed.\n\n    // reset the bypass counter, since the counter will be incremented for every bypassed element,\n    // even ones that were counted before.\n    numberOfSvgUseElementsToBypass = 0;\n\n    // get the cached <use> index\n    var index = 0;\n\n    // while the index exists in the live <use> collection\n    while (index < uses.length) {\n      // get the current <use>\n      var use = uses[index];\n\n      // get the current <svg>\n      var parent = use.parentNode;\n      var svg = getSVGAncestor(parent);\n      var src = use.getAttribute('xlink:href') || use.getAttribute('href');\n\n      if (!src && opts.attributeName) {\n        src = use.getAttribute(opts.attributeName);\n      }\n\n      if (svg && src) {\n\n        // if running with legacy support\n        if (LEGACY_SUPPORT && nosvg) {\n          // create a new fallback image\n          var img = document.createElement('img');\n\n          // force display in older IE\n          img.style.cssText = 'display:inline-block;height:100%;width:100%';\n\n          // set the fallback size using the svg size\n          img.setAttribute('width', svg.getAttribute('width') || svg.clientWidth);\n          img.setAttribute('height', svg.getAttribute('height') || svg.clientHeight);\n\n          // set the fallback src\n          img.src = fallback(src, svg, use);\n\n          // replace the <use> with the fallback image\n          parent.replaceChild(img, use);\n        } else if (polyfill) {\n          if (!opts.validate || opts.validate(src, svg, use)) {\n            // remove the <use> element\n            parent.removeChild(use);\n\n            // parse the src and get the url and id\n            var srcSplit = src.split('#');\n            var url = srcSplit.shift();\n            var id = srcSplit.join('#');\n\n            // if the link is external\n            if (url.length) {\n              // get the cached xhr request\n              var xhr = requests[url];\n\n              // ensure the xhr request exists\n              if (!xhr) {\n                xhr = requests[url] = new XMLHttpRequest();\n\n                xhr.open('GET', url);\n\n                xhr.send();\n\n                xhr._embeds = [];\n              }\n\n              // add the svg and id as an item to the xhr embeds list\n              xhr._embeds.push({\n                parent: parent,\n                svg: svg,\n                id: id\n              });\n\n              // prepare the xhr ready state change event\n              loadreadystatechange(xhr, use);\n            } else {\n              // embed the local id into the svg\n              embed(parent, svg, document.getElementById(id), use);\n            }\n          } else {\n            // increase the index when the previous value was not \"valid\"\n            ++index;\n            ++numberOfSvgUseElementsToBypass;\n          }\n        }\n      } else {\n        // increase the index when the previous value was not \"valid\"\n        ++index;\n      }\n    }\n\n    // continue the interval\n    requestAnimationFrame(oninterval, 67);\n  }\n\n  // conditionally start the interval if the polyfill is active\n  if (polyfill) {\n    oninterval();\n  }\n}\n\nfunction getSVGAncestor(node) {\n  var svg = node;\n  while (svg.nodeName.toLowerCase() !== 'svg') {\n    svg = svg.parentNode;\n    if (!svg) {\n      break;\n    }\n  }\n  return svg;\n}\n"],"names":["embed","parent","svg","target","use","fragment","document","createDocumentFragment","viewBox","hasAttribute","getAttribute","setAttribute","clone","importNode","cloneNode","g","createElementNS","namespaceURI","childNodes","length","appendChild","firstChild","i","attributes","attr","name","value","loadreadystatechange","xhr","onreadystatechange","readyState","cachedDocument","_cachedDocument","implementation","createHTMLDocument","body","innerHTML","responseText","domain","_cachedTarget","_embeds","splice","map","item","id","getElementById","svg4everybody","rawopts","nosvg","fallback","polyfill","opts","Object","LEGACY_SUPPORT","src","replace","exec","test","navigator","userAgent","createElement","newerIEUA","webkitUA","olderEdgeUA","edgeUA","inIframe","window","top","self","match","requests","requestAnimationFrame","setTimeout","uses","getElementsByTagName","numberOfSvgUseElementsToBypass","oninterval","index","parentNode","getSVGAncestor","attributeName","img","style","cssText","clientWidth","clientHeight","replaceChild","validate","removeChild","srcSplit","split","url","shift","join","XMLHttpRequest","open","send","push","node","nodeName","toLowerCase"],"mappings":"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"}